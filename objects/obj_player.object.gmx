<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_movement();
audio_play_sound(snd_main,1,false);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>obj_player</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player Mechanics!
scr_movement();

//ANIMATION on key release
if keyboard_check_released(ord('D')){
    sprite_index = spr_player_still_right;
    image_speed = .08;
}

if keyboard_check_released(ord('A')){
    sprite_index = spr_player_still_left;
    image_speed = .08;
}

if keyboard_check_released(ord('S')){
    sprite_index = spr_player_still_left;
    image_speed = .08;
}

if keyboard_check_released(ord('W')){
    sprite_index = spr_player_up;
    image_speed = .08;
}

//PLAYER MOVEMENT
if MOVEUP{
    global.LOOKINGDIRECTION = 1;
    sprite_index = spr_player_up;
    image_speed = 0.16;
    if place_free(x,y-4){
        y -= WALKSPD;
    }
}

if MOVEUP &amp; RUN{
    if place_free(x,y-4){
        y -= RUNSPD;
    }
}

if MOVEDOWN{
    global.LOOKINGDIRECTION = 3;
    sprite_index = spr_player_down;
    if place_free(x,y+4){
        y += WALKSPD;
    }
}

if MOVEDOWN &amp; RUN{
    if place_free(x,y+4){
        y += RUNSPD;
    }
}

if MOVELEFT{
    global.LOOKINGDIRECTION = 4;
    sprite_index = spr_player_left;
    if place_free(x-4,y){
        x -= WALKSPD;
    }
}

if MOVELEFT &amp; RUN{
    if place_free(x-4,y){
        x -= RUNSPD;
    }
}

if MOVERIGHT{
    global.LOOKINGDIRECTION = 2;
    sprite_index = spr_player_right;
    if place_free(x+4,y){
        x += WALKSPD;
    }
}

if MOVERIGHT &amp; RUN{
    if place_free(x+4,y){
        x += RUNSPD;
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///SHOOTING MECHANICS
scr_movement();

if SHOOT{
    instance_create(x,y,obj_bullet);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///MELEE MECHANICS
scr_movement();

if MELEE{
    if global.LOOKINGDIRECTION = 1{
        if place_meeting(x,y-16,obj_mob){
            with obj_mob{
                if place_meeting(x,y+16,obj_player){
                    instance_destroy();
                }
            }
        }
    }
}

if MELEE{
    if global.LOOKINGDIRECTION = 3{
        if place_meeting(x,y+16,obj_mob){
            with obj_mob{
                if place_meeting(x,y-16,obj_player){
                    instance_destroy();
                }
            }
        }
    }
}

if MELEE{
    if global.LOOKINGDIRECTION = 2{
        if place_meeting(x+16,y,obj_mob){
            with obj_mob{
                if place_meeting(x-16,y,obj_player){
                    instance_destroy();
                }
            }
        }
    }
}

if MELEE{
    if global.LOOKINGDIRECTION = 4{
        if place_meeting(x-16,y,obj_mob){
            with obj_mob{
                if place_meeting(x+16,y,obj_player){
                    instance_destroy();
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///DRAW PLAYER SHADOW
draw_sprite(spr_player_shadow,image_index,x,y);
draw_self();

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
